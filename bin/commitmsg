#!/bin/bash

main() {
	if ! git status &>/dev/null; then
		echo "not in a git repo"
		exit 1
	fi

	DIFF=$(git diff --cached)
	if [ -z "$DIFF" ]; then
		echo "add stuff with git add and re-run"
		exit 0
	fi

	PROMPT="<INSTRUCTION>Summarise into a single git commit message with max 15 words (prefer less than 8), following SEMVER formatting:
* fix(<context>): for patches that fix bugs or minor issues
* chore(<context>): for miscellaneous changes like updates to dependencies or configuration
* feat(<context>): for new features or significant additions
* docs(<context>): for changes to documentation
* test(<context>): for adding or updating tests
* breaking(<context>): for changes that break backwards compatibility

RULES:
* <context> MUST BE MAX 2 WORDS
* RESPOND ONLY WITH THE COMMIT MESSAGE, ALWAYS OMIT CODE BLOCKS
* MAKE SURE THE COMMIT MESSAGE CONTAINS AS MUCH DETAILS REGARDING THE CHANGE AS POSSIBLE
* NEVER INCLUDE BOILERPLATE WORDS OR EXPLANATIONS
* IT MUST FOLLOW THE FORMATTING AS DESCRIBED ABOVE
</INSTRUCTION>"
	MSG=$(git diff --cached | GROQ_TEMPERATURE=0 groq $PROMPT)
	MSG=${MSG//[\'\"\`]/}

	if [ -z "$MSG" ]; then
		echo "failed to generate message :("
		exit 1
	fi
	read -p "Is the commit message '$MSG' ok? (y/n) " -n 1 -r
	echo
	if [[ $REPLY =~ ^[Yy]$ ]]; then
		git commit -m "$MSG"
	else
		echo "aborting"
		exit 1
	fi
}

main $@
