#!/usr/bin/env python3

import json
import os
import sys
from typing import Any

import requests


def stdout(msg, **kwargs):
    print(msg, file=sys.stdout, **kwargs)


def stderr(msg, **kwargs):
    print(msg, file=sys.stderr, **kwargs)


def body(prompt: list[str] = []) -> str:
    return json.dumps(
        {
            "messages": [
                {
                    "role": "system",
                    "content": os.environ.get(
                        "GROQ_SYSTEM_PROMPT",
                        "Briefly respond to the user, being crystal clear and helpful. Never lie.",
                    ),
                },
                {"role": "user", "content": " ".join(prompt)},
            ],
            "model": os.environ.get("GROQ_MODEL", "llama-3.1-70b-versatile"),
            "temperature": float(os.environ.get("GROQ_TEMPERATURE", 0.1)),
            "stream": os.environ.get("GROQ_STREAM", "True").lower() == "true",
        }
    )


def stream(prompt: list[str]):
    msg: dict[str, Any] = json.loads(body(prompt=prompt))

    headers = {
        "Authorization": f'Bearer {os.environ["GROQ_API_KEY"]}',
        "Content-Type": "application/json",
        "Accept": "application/json",
    }

    response = requests.post(
        "https://api.groq.com/openai/v1/chat/completions",
        headers=headers,
        data=json.dumps(msg),
        stream=True,
    )

    response.raise_for_status()

    for line in response.iter_lines():
        tok: str = line.decode("utf-8").lstrip("data: ")
        if tok == "[DONE]":
            stdout("")
            return

        try:
            data: dict[str, Any] = json.loads(tok)
        except json.JSONDecodeError:
            continue

        if "error" in data:
            stderr(json.dumps(data, indent=2))
            return

        if data.get("choices", [{}])[0].get("delta", {}).get("content"):
            stdout(data["choices"][0]["delta"]["content"], end="")


def main():
    if sys.stdin.isatty():
        stream([*sys.argv[1:]])
    else:
        stream([*sys.argv[1:], "\n\n", *sys.stdin.read().splitlines()])


if __name__ == "__main__":
    main()
